class MyQueue {
public:
stack<int> s1,s2;
    MyQueue() {
        
    }
    
    void push(int x) {
         while(!s1.empty())
        {
            s2.push(s1.top());
            s1.pop();
        }
        s1.push(x);
        while(!s2.empty())
        {
          s1.push(s2.top());
            s2.pop();
        }
    }
    
    int pop() {
         int val= s1.top();
          s1.pop();
      return val;
      
    }
    
    int peek() {
        return s1.top();
    }
    
    bool empty() {
        return s1.empty();
    }
};




//optimized solution

class MyQueue {
public:
stack<int> input,output;
    MyQueue() {
        
    }
    
    void push(int x) {
         input.push(x);
    }
    
    int pop() {
      if(output.empty())
      {
          while(!input.empty())
          {
              output.push(input.top());
              input.pop();
          }
      }
             int ans= output.top();
          output.pop();
           return ans;
      
      }
    
    
    int peek() {
        if(output.empty())
        {
            while(!input.empty())
          {
              output.push(input.top());
              input.pop();
          }
        }
           return output.top();
        
    }
    
    
    bool empty() {
        return output.empty() && input.empty();
    }
    
};

