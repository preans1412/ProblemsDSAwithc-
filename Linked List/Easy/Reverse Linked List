///***     c++   ***////


class Solution {
public:
    ListNode* reverseList(ListNode* head)
     {
         if(head==NULL) return NULL;
         
        ListNode *p= NULL, *c = head, *n=head->next;   
        while(c!=NULL)
        {
            c->next=p;
            p=c;
            c=n;
            if(n!=NULL)
            {
            n=n->next;}
        }
        return p;
    }
};




//***   JAVA ***///


class Solution {
    public ListNode reverseList(ListNode head) 
    {
       if(head == null )
       return null;
       ListNode p=null , c=head , n=head.next ;

       while(c!=null)
       {
        c.next=p;
        p=c;
            c=n;
            if(n!=null)
            {
            n=n.next;
            }
       }    
       return p;
    }
}



///***     PYTHON     ***////



