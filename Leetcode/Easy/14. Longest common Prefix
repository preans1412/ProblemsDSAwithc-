

1ST METHOD:

class Solution {
public:
    string longestCommonPrefix(vector<string>& strs)
    {
        string ans;
        for(int i=0;i<strs[0].size();i++)
        {
            for(int j=1;j<strs.size();j++)
            {
                if(strs[0][i] != strs[j][i])
                {
                    return ans;
                }
            }
            ans += strs[0][i];
        }
        return ans;
    }
};

PROBLEMS 
what if size of string j is smaller than size of string i, in that case, we will have undefined behavior if i >= str[j].size() if the string is not constant.







for sorting, you will be doing O(nlog(n))m.
Here, n log(n) is basic sorting logic, while considering m is general size of each individual string.
Better logic will be start with string 1 as the solution, compare it with other string, keep on decreasing your answer length till 0.
That way it will only take O(mn).




3RD METHOD:
