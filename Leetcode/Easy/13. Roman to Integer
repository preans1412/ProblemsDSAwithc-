class Solution {
public:
    int romanToInt(string s) 
    {
        
      unordered_map<char,int> map= { { 'I' , 1 },
                                   { 'V' , 5 },
                                   { 'X' , 10 },
                                   { 'L' , 50 },
                                   { 'C' , 100 },
                                   { 'D' , 500 },
                                   { 'M' , 1000 } };
      
      
    
      int ans=map[s.back()];
      for(int i = s.length() - 2; i >= 0; --i)
      
      {
          if(map[s[i]]<map[s[i+1]])
          {
              ans=ans-map[s[i]];
          }
          else
          {
              ans=ans+map[s[i]];
          }
      }
return ans;

    }
};




DOUBT IN THIS METHOD

class Solution {
public:
    int romanToInt(string s) 
    {
        
     int ans=0;
        unordered_map <char,int> mp{
        {'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};

    for(int i=0;i<s.size();i++){
        if(mp[s[i]]<mp[s[i+1]]){
            //for cases such as IV,CM, XL, etc...
            ans=ans-mp[s[i]];
        }
        else{
            ans=ans+mp[s[i]];
        }
    }
        return ans;
    }
};
