#include <stack>

class Solution {
public:
    bool isValid(string s) {
        stack<char> p;
        for (char& c : s) {
            switch (c) {
                case '(': 
                case '{': 
                case '[': p.push(c); break;
                case ')': if (p.empty() || p.top()!='(') return false; else p.pop(); break;
                case '}': if (p.empty() || p.top()!='{') return false; else p.pop(); break;
                case ']': if (p.empty() || p.top()!='[') return false; else p.pop(); break;
                default: ; 
            }
        }
        return p.empty() ;
    }
};






#include <stack>

class Solution {
public:
    bool isValid(string s)
    {
       stack<char>st;
       for(auto c:s)
       {
           if(st.empty())
           {
             st.push(c);
           }
           else if( (st.top() == '('  && c ==')') ||
                    (st.top() == '{'  && c =='}') ||
                    (st.top() == '['  && c ==']'))
           {
               st.pop();
           }
           else{
               st.push(c);
           }
       }
       if(st.size()==0)
       return true;

       return false;
    }
};
